let e=new THREE.Box3(new THREE.Vector3(-10,-10,-10),new THREE.Vector3(10,10,10)),t={};function n(e,n){t["("+e.x+", "+e.y+", "+e.z+")"]=n}function o(e,n){return t["("+e.x+", "+e.y+", "+e.z+")"]}function i(){t={}}let r={},a=function(t,i){let a=this,c=.2,l=1.5*c;if(a.currentPosition=V(e),a.positions=[a.currentPosition],a.object3d=new THREE.Object3D,t.add(a.object3d),i.texturePath)a.material=new THREE.MeshLambertMaterial({map:r[i.texturePath]});else{let e=P(0,16777215),t=new THREE.Color(e).multiplyScalar(.3);a.material=new THREE.MeshPhongMaterial({specular:11140351,color:e,emissive:t,shininess:100})}let s=function(e){let t=new THREE.Mesh(new THREE.SphereGeometry(l,8,8),a.material);t.position.copy(e),a.object3d.add(t)};n(a.currentPosition,a),s(a.currentPosition),a.update=function(){let t,r;a.positions.length>1&&(t=a.positions[a.positions.length-2],r=(new THREE.Vector3).subVectors(a.currentPosition,t)),M(.5)&&r?directionVector=r:(directionVector=new THREE.Vector3,directionVector[g("xyz")]+=g([1,-1]));let l=(new THREE.Vector3).addVectors(a.currentPosition,directionVector);e.containsPoint(l)&&(o(l)||(n(l,a),r&&!r.equals(directionVector)&&(M(i.teapotChance)?function(e){let t=new THREE.Mesh(new THREE.TeapotBufferGeometry(.30000000000000004,!0,!0,!0,!0,!0),a.material);t.position.copy(e),t.rotation.x=Math.floor(x(0,50))*Math.PI/2,t.rotation.y=Math.floor(x(0,50))*Math.PI/2,t.rotation.z=Math.floor(x(0,50))*Math.PI/2,a.object3d.add(t)}(a.currentPosition):M(i.ballJointChance)?s(a.currentPosition):function(e,t,n){let o=new THREE.Mesh(new THREE.SphereGeometry(c,8,8),a.material);o.position.copy(e),a.object3d.add(o)}(a.currentPosition)),function(e,t,n){let o=(new THREE.Vector3).subVectors(t,e),i=new THREE.ArrowHelper(o.clone().normalize(),e),r=new THREE.CylinderGeometry(c,c,o.length(),10,4,!0),l=new THREE.Mesh(r,n);l.rotation.setFromQuaternion(i.quaternion),l.position.addVectors(e,o.multiplyScalar(.5)),l.updateMatrix(),a.object3d.add(l)}(a.currentPosition,l,a.material),a.currentPosition=l,a.positions.push(l)))}},c="elbow",l="ball",s="mixed",u="cycle",E=[],d={multiple:!0,texturePath:null,joints:s,interval:[16,24]},h=document.getElementById("canvas-webgl"),w=new THREE.WebGLRenderer({alpha:!0,antialias:!0,canvas:h});w.setSize(window.innerWidth,window.innerHeight);let p=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e5),m=new THREE.Scene,T=new THREE.AmbientLight(1118481);m.add(T);let H=new THREE.DirectionalLight(16777215,.9);function R(){if(d.texturePath&&!r[d.texturePath]){let e=THREE.ImageUtils.loadTexture(d.texturePath);e.wrapS=e.wrapT=THREE.RepeatWrapping,e.repeat.set(2,2),r[d.texturePath]=e}for(let e=0;e<E.length;e++)E[e].update(m);if(0===E.length){let e=d.joints;d.joints===u&&(e=jointsCycleArray[jointsCycleIndex++]);let t={teapotChance:.005,ballJointChance:e===l?1:e===s?1/3:0,texturePath:d.texturePath};if(M(.05)&&(t.teapotChance=.05,t.texturePath="images/textures/candycane.png",!r[t.texturePath])){let e=THREE.ImageUtils.loadTexture(t.texturePath);e.wrapS=e.wrapT=THREE.RepeatWrapping,e.repeat.set(2,2),r[t.texturePath]=e}for(let e=0;e<1+d.multiple*(1+M(.1));e++)E.push(new a(m,t))}drawing&&(w.render(m,p),requestAnimationFrame(R))}function f(){if(M(.5))p.position.set(0,0,14);else{let e=new THREE.Vector3(14,0,0),t=new THREE.Vector3(x(-1,1),x(-1,1),x(-1,1)),n=Math.PI/2,o=(new THREE.Matrix4).makeRotationAxis(t,n);e.applyMatrix4(o),p.position.copy(e)}let e=new THREE.Vector3(0,0,0);p.lookAt(e)}function x(e,t){return Math.random()*(t-e)+e}function P(e,t){return Math.round(x(e,t))}function M(e){return Math.random()<e}function g(e){return e[Math.floor(Math.random()*e.length)]}function y(e){for(let t=e.length-1;t>0;t--){let n=Math.floor(Math.random()*(t+1)),o=e[t];e[t]=e[n],e[n]=o}}function V(e){return new THREE.Vector3(P(e.min.x,e.max.x),P(e.min.y,e.max.y),P(e.min.z,e.max.z))}H.position.set(-1.2,1.5,.5),m.add(H),f(),addEventListener("resize",(function(){w.setSize(window.innerWidth,window.innerHeight),p.aspect=window.innerWidth/window.innerHeight,p.updateProjectionMatrix()}),!1),drawing=!0,setTimeout((()=>{drawing=!1}),5e3),R();